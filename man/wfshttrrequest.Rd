% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/WFS_httr_request.R
\name{httr_GET_request}
\alias{httr_GET_request}
\alias{httr_POST_request}
\title{Retrieve information with a httr GET or POST request}
\usage{
httr_GET_request(
  request,
  debug = F,
  to_sf = F,
  sfverbose = F,
  httrverbose = rep(F, 4)
)

httr_POST_request(
  url = WFS_get_url(),
  request,
  debug = F,
  to_sf = F,
  sfverbose = F,
  httrverbose = rep(F, 4)
)
}
\arguments{
\item{request}{Character string with url as needed for \code{\link[httr:GET]{httr::GET()}} in case of the \code{httr_GET_request} and a character string with
a \code{\link[httr:POST]{httr::POST()}} body otherwise}

\item{debug}{Logical indicating if the httr response object is to be returned}

\item{to_sf}{Logical indicating if a \code{json} object should be converted to an \code{sf} object}

\item{sfverbose}{Logical indicating if \code{\link[sf:st_read]{sf::read_sf()}} messages will be displayed}

\item{httrverbose}{Logical vector of up to four entries to be used in \code{\link[httr:verbose]{httr::verbose()}}. When this
vector contains at least one \code{TRUE} debugging messages are displayed.
Useful to find out what exactly was sent to and received from the webserver}
}
\value{
depending on the request a \code{json}, \code{sf} or \code{xml} object or a character string with a \code{httr} message
in case of an error
}
\description{
The \code{httr_GET_request} and \code{httr_POST_request} retrieve information from a webserver.\cr
We assume it could provide data that could be converted to an \code{sf} (simple features object) as for most
functions in this package but the functions should also work outside this setting. See \strong{Details} .
}
\details{
The function \code{httr_GET_request} expects a request that will immediately be processed by \code{\link[httr:GET]{httr::GET()}} (so complete with \code{url})
and the \code{httr_POST_request} expects to receive separately the \code{url} and \verb{POST body} to be passed to \code{\link[httr:POST]{httr::POST()}}.
The result of this functions will be
\itemize{
\item the resulting response object when \code{debug=TRUE}
\item a converted \code{json} object (converted with \code{\link[jsonlite:fromJSON]{jsonlite::fromJSON()}}) when the response object
indicates a \code{json} object and \code{to_sf=TRUE} is not specified
\item an \code{sf} object (converted by \code{\link[sf:st_read]{sf::read_sf()}}) when the response object
indicates a \code{json} object and \code{to_sf=TRUE} is specified
\item an \code{xml_document} object (converted by \code{\link[xml2:read_xml]{xml2::read_xml()}}) if the response object
indicates a \code{xml} object
\item a character string with message in case of an \code{httr} error
}
}
\examples{
\dontrun{
reqG <- "https://geoweb.amstelveen.nl/geoserver/topp/wfs?service=WFS&version=1.1.0&request=GetCapabilities"
cap1 <- httr_GET_request(reqG,httrverbose=c(T,F))

reqP <- paste0(
 '<?xml version="1.0" encoding="ISO-8859-1"?>',
 '<GetCapabilities service="WFS" version="1.1.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" ',
 'xmlns="http://www.opengis.net/wfs" xmlns:wfs="http://www.opengis.net/wfs" ',
 'xmlns:ows="http://www.opengis.net/ows" xmlns:gml="http://www.opengis.net/gml" ',
 'xmlns:ogc="http://www.opengis.net/ogc" xmlns:xlink="http://www.w3.org/1999/xlink" ',
 'xsi:schemaLocation="http://www.opengis.net/wfs"/>'
)
cap1 <- httr_POST_request(WFS_get_url(),reqP,httrverbose=c(T,F))
}
}
